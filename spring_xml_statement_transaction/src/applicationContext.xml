<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 指定扫描的包（包括子包），是注解生效 -->
    <context:component-scan base-package="com.xiaofei"/>
    <!-- 读取db.properties文件 -->
    <context:property-placeholder location="classpath:db.properties"/>
    <!-- 配置数据源 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
  		<!-- mysql数据库驱动 -->
  		<property name="driverClassName" value="${jdbc.driver}"/>
    	<!-- 连接数据库的url -->
    	<property name="url" value="${jdbc.url}"/>
    	<!-- 连接数据库的用户名 -->
    	<property name="username" value="${jdbc.username}"/>
    	<!-- 连接数据库的密码 -->
    	<property name="password" value="${jdbc.password}"/>
    </bean>
    <!-- 配置JDBC模板 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    	<property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 为数据源添加事务管理器 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource"/>
    </bean>
   	<!-- 编写通知声明事务 -->
   	<tx:advice id="myAdvice" transaction-manager="txManager">
   		<tx:attributes>
   			<!-- *表示任意方法 -->
   			<tx:method name="*"/>
   		</tx:attributes>
   	</tx:advice>
    <!-- 编写AOP，让spring自动对目标对象生成代理，需要使用AspectJ的表达式 -->
    <aop:config>
    	<!-- 定义切入点 -->
    	<aop:pointcut expression="execution(* com.xiaofei.service.impl.*.*())" id="txPointCut"/>
    	<!-- 切面：将切入点与通知点关联 -->
    	<aop:advisor advice-ref="myAdvice" pointcut-ref="txPointCut"/>
    </aop:config>
</beans>
